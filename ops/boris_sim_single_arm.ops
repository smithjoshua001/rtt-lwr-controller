import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")

import("rtt_gazebo_embedded")
import("rtt-gazebo-robot-sim")
import("LWRController")
require("os")

loadComponent("gazebo","RTTGazeboEmbedded")
setActivity("gazebo",0,10,ORO_SCHED_OTHER)
gazebo.argv = strings("--verbose")
gazebo.add_plugin("libRTTGazeboClockPlugin.so")

loadComponent("coman_gazebo","cogimon::robotSim")
setActivity("coman_gazebo",0,11,ORO_SCHED_OTHER)

var string path_world=os.getenv("prefix")+"/cogimon-minimal-nightly/etc/cogimon-scenarios/scenario-wipe-board/world/scn-wipe-board-vertical-boris-base.world"
gazebo.world_path = path_world

gazebo.configure()
gazebo.start()
gazebo.toggleDynamicsSimulation(false)

gazebo.spawn_model_at_pos("kuka-lwr", "model://boris-ft", 0,0,0)


coman_gazebo.getModel("kuka-lwr")
var int DOFsize = 7;
var string path_model_urdf = os.getenv("GAZEBO_MODEL_PATH")+"/boris-ft/model.urdf"
var string path_model_srdf = os.getenv("GAZEBO_MODEL_PATH")+"/boris-ft/model.srdf"
coman_gazebo.loadURDFAndSRDF(path_model_urdf, path_model_srdf)
coman_gazebo.configure()

loadComponent("controller", "PositionNormalControllerContained")
setActivity("controller",0.001,10,ORO_SCHED_OTHER)
controller.setBaseAndTip("krc_base","left_lwr_arm_7_link")
#controller.setBaseAndTip("lwr_arm_base_link","lwr_tool")lwr_arm_7_link
controller.loadURDFAndSRDF(path_model_urdf, path_model_srdf)
controller.configure()

#load joint position controller
loadComponent("jointposcontroller","JointPositionCtrl")
setActivity("jointposcontroller",0.01,30,ORO_SCHED_OTHER)
jointposcontroller.setDOFsizeAndGains(7,100,5)
jointposcontroller.configure()
var rstrt.kinematics.JointAngles desJointAngles_start = rstrt.kinematics.JointAngles(7)
#CHANGE THESE VALUES TO DESIRED START CONFIGURATION! OR SET torqueTransition.setDOFsizeAndTransitionTime to torqueTransition.setDOFsizeAndTransitionTime(7,0) so that the time to switch is at 0 seconds!

desJointAngles_start.angles[0] =2.5 
desJointAngles_start.angles[1] =-1.81326
desJointAngles_start.angles[2] =-1.21934
desJointAngles_start.angles[3] =1.34302
desJointAngles_start.angles[4] =2.96706
desJointAngles_start.angles[5] =-1.71339
desJointAngles_start.angles[6] = 0

gazebo.setInitialConfigurationForModel("kuka-lwr", desJointAngles_start);
jointposcontroller.setDesiredJointAngles(desJointAngles_start)

#load torqueTransition
loadComponent("torqueTransition", "TorqueTransition")
setActivity("torqueTransition",0.01,30,ORO_SCHED_OTHER)
torqueTransition.setDOFsizeAndTransitionTime(7,3)
torqueTransition.configure()



# connect all auxiliaries
var ConnPolicy cp_aux;
connect("coman_gazebo.left_full_arm_JointFeedback", "controller.robot_in", cp_aux)
connect("coman_gazebo.left_full_arm_JointFeedback","jointposcontroller.in_robotstatus_port",cp_aux)
### connections jointposcontroller
var ConnPolicy cp_jointposcontroller;
connect("jointposcontroller.out_torques_port","torqueTransition.in_torquesA_port",cp_jointposcontroller)

#torquetransition
var ConnPolicy cp_torqueTransition;
connect("controller.torques_out","torqueTransition.in_torquesB_port",cp_torqueTransition)
connect("torqueTransition.out_torques_port", "coman_gazebo.left_full_arm_JointTorqueCtrl", cp_torqueTransition)


coman_gazebo.setControlMode("left_full_arm", "JointTorqueCtrl")
gazebo.toggleDynamicsSimulation(true)
controller.start()
# start controller related components
jointposcontroller.start()
torqueTransition.start()
controller.quat_x = 0
controller.quat_y = 1
controller.quat_z = 0
controller.quat_w = 0
controller.setGains(10,6,10,7)
controller.setPos(0.5,0.3,1)
gazebo.stop()



